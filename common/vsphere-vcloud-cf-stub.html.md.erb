---
title: Customizing the Cloud Foundry Deployment Manifest Stub for vSphere, vCloud Air, or vCloud Director
owner: Release Integration
---

<strong><%= modified_date %></strong>

This topic describes how to customize the Cloud Foundry deployment manifest stub
for vSphere, vCloud Air, or vCloud Director.  Follow the
[editing instructions](#editing) to customize the manifest stub with information
about your environment.

##<a id="stub"></a>Cloud Foundry Deployment Manifest Stub ##

<%= yield_for_code_snippet from: 'cloudfoundry/cf-release', at: 'cf-stub-vsphere' %>

##<a id="editing"></a>Editing Instructions ##

<table border="1" class="nice">
  <tr>
    <th style="width:35%">Deployment Manifest Stub Contents</th>
    <th>Editing Instructions</th>
  </tr>
  <tr>
    <td><pre><code>
meta:
  environment: ENVIRONMENT
    </code></pre></td>
    <td>Replace <code>ENVIRONMENT</code> with an arbitrary name describing your environment, e.g. <code>vsphere-prod</code>.
    </td>
  </tr>
  <tr>
    <td><pre><code>
director_uuid: DIRECTOR_UUID
    </code></pre></td>
    <td>Replace <code>DIRECTOR_UUID</code> with the BOSH Director UUID. Use
    <code>bosh status --uuid</code> to view the BOSH Director UUID.
    </td>
  </tr>
  <tr>
    <td><pre><code>
networks:
  - name: cf1
    subnets:
    - range: 10.85.9.0/24
      gateway: 10.85.9.1
      reserved:
      - 10.85.9.2 - 10.85.9.100
      - 10.85.9.200 - 10.85.9.210
      dns:
      - 10.87.8.10
      - 10.87.8.11
      static:
      - 10.85.9.230 - 10.85.9.254
      cloud_properties:
        name: VSPHERE_NETWORK_NAME_1

  - name: cf2
    subnets:
    - range: 10.85.10.0/24
      gateway: 10.85.10.1
      reserved:
      - 10.85.10.2 - 10.85.10.100
      - 10.85.10.200 - 10.85.10.210
      dns:
      - 10.87.8.10
      - 10.87.8.11
      static:
      - 10.85.10.230 - 10.85.10.254
      cloud_properties:
        name: VSPHERE_NETWORK_NAME_2
    </code></pre></td>
    <td>This examples assumes a 2-network deployment. Replace <code>VSPHERE_NETWORK_NAME_1</code> and
    <code>VSPHERE_NETWORK_NAME_2</code> with names of networks in your vSphere datacenter. Update the values for
    <code>range</code>, <code>reserved</code>, <code>static</code>, <code>dns</code> and <code>gateway</code> accordingly.
    </td>
  </tr>
  <tr>
    <td><pre><code>
properties:
  system_domain: SYSTEM_DOMAIN
  system_domain_organization: SYSTEM_DOMAIN_ORGANIZATION
  app_domains:
   - APP_DOMAIN
    </code></pre></td>
    <td>Replace <code>SYSTEM_DOMAIN</code> and <code>APP_DOMAIN</code> with the full domain you want associated with applications pushed to your Cloud Foundry installation. You must have already acquired these domains and configured their DNS records so that these domains resolve to your load balancer. Example: "cloud-09.cf-app.com."
    <br/><br/>
    Pick any name you like for the <code>SYSTEM_DOMAIN_ORGANIZATION</code>, this organization will be created and configured to own the <code>SYSTEM_DOMAIN</code>.
    </td>
  </tr>
  <tr>
    <td><pre><code>
  cc:
    staging_upload_user: STAGING_UPLOAD_USER
    staging_upload_password: STAGING_UPLOAD_PASSWORD
    bulk_api_password: BULK_API_PASSWORD
    db_encryption_key: CCDB_ENCRYPTION_KEY
    </code></pre></td>
    <td>
    The Cloud Controller API endpoint requires basic authentication. Replace <code>STAGING_UPLOAD_USER</code> and <code>STAGING_UPLOAD_PASSWORD</code> with a username and password of your choosing.
    <br /><br />
    Replace <code>BULK_API_PASSWORD</code> with a password of your choosing. Health Manager uses this password to access the Cloud Controller bulk API.
    <br /><br />
    Replace <code>CCDB_ENCRYPTION_KEY</code>
    with a secure key that you generate to encrypt sensitive values in the
    Cloud Controller database.
    </td>
  </tr>
  <tr>
    <td><pre><code>
  consul:
    encrypt_keys:
      - CONSUL_ENCRYPT_KEY
    ca_cert: CONSUL_CA_CERT
    server_cert: CONSUL_SERVER_CERT
    server_key: CONSUL_SERVER_KEY
    agent_cert: CONSUL_AGENT_CERT
    agent_key: CONSUL_AGENT_KEY
    </code></pre></td>
    <td>See the instructions on <a href="../additional/consul-security.html">security configuration for consul</a>.
    </td>
  </tr>
  <tr>
    <td><pre><code>
  loggregator_endpoint:
    shared_secret: LOGGREGATOR_ENDPOINT_SHARED_SECRET
    </code></pre></td>
    <td>Generate a string secret and replace <code>LOGGREGATOR_ENDPOINT_SHARED_SECRET</code>.
    </td>
  </tr>
  <tr>
    <td><pre><code>
  nats:
    user: NATS_USER
    password: NATS_PASSWORD
    </code></pre></td>
    <td>Replace <code>NATS_USER</code> and
		<code>NATS_PASSWORD</code> with a username and secure password of your choosing. Cloud Foundry components use these credentials to communicate with each other over the NATS message bus.
	  </td>
  </tr>
  <tr>
    <td><pre><code>
  router:
    status:
      user: ROUTER_USER
      password: ROUTER_PASSWORD
    </code></pre></td>
    <td>
      Replace <code>ROUTER_USER</code> and
  		<code>ROUTER_PASSWORD</code> with a username and secure password of your choosing.
	  </td>
  </tr>
  <tr>
    <td><pre><code>
  uaa:
    admin:
      client_secret: ADMIN_SECRET
    cc:
      client_secret: CC_CLIENT_SECRET
    clients:
      cc_routing:
        secret: CC_ROUTING_SECRET
      cloud_controller_username_lookup:
        secret: CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
      doppler:
        secret: DOPPLER_SECRET
      gorouter:
        secret: GOROUTER_SECRET
      tcp_emitter:
        secret: TCP-EMITTER-SECRET
      tcp_router:
        secret: TCP-ROUTER-SECRET
      login:
        secret: LOGIN_CLIENT_SECRET
      notifications:
        secret: NOTIFICATIONS_CLIENT_SECRET
    </code></pre></td>
    <td>Replace all the <code>*_SECRET</code>s with secure secrets that you generate.
    </td>
  </tr>
  <tr>
    <td><pre><code>
    jwt:
      verification_key: JWT_VERIFICATION_KEY
      signing_key: JWT_SIGNING_KEY
    </code></pre></td>
    <td>Generate a PEM-encoded RSA key pair, and replace <code>JWT_SIGNING_KEY</code> with the private key, and <code>JWT_VERIFICATION_KEY</code> with the corresponding public key.<br/>
    Paste in the full keys, including the <code>BEGIN</code> and <code>END</code> delimiter lines.
    </td>
  </tr>
  <tr>
    <td><pre><code>
    scim:
      users:
        - admin|ADMIN_PASSWORD|scim.write,scim.read,o...
    </code></pre></td>
    <td>Generate a secure password and replace <code>ADMIN_PASSWORD</code> with that value to set the password for the Admin user of your Cloud Foundry installation.
    </td>
  </tr>
  <tr>
    <td><pre><code>
  ccdb:
    roles:
    - name: ccadmin
      password: CCDB_PASSWORD
  uaadb:
    roles:
    - name: uaaadmin
      password: UAADB_PASSWORD
  databases:
    roles:
    - name: ccadmin
      password: CCDB_PASSWORD
    - name: uaaadmin
      password: UAADB_PASSWORD
    </code></pre></td>
    <td>Replace <code>CCDB_PASSWORD</code> and <code>UAADB_PASSWORD</code> with secure passwords of your choosing.
  </td>
  </tr>
  <tr>
    <td><pre><code>
  hm9000:
    ca_cert: HM9000_CA_CERT
    server_cert: HM9000_SERVER_CERT
    server_key: HM9000_SERVER_KEY
    agent_cert: HM9000_AGENT_CERT
    agent_key: HM9000_AGENT_KEY
    </code></pre></td>
    <td>
      Generate ssl certs for hm9000 and replace these values. You can use the <code>scripts/generate-hm9000-certs</code> script in the cf-release repository to generate self signed certs.
    </td>
  </tr>
  <tr>
    <td><pre><code>
jobs:
- name: ha_proxy_z1
  properties:
    ha_proxy:
      ssl_pem: |
        -----BEGIN RSA PRIVATE KEY-----
        RSA_PRIVATE_KEY
        -----END RSA PRIVATE KEY-----
        -----BEGIN CERTIFICATE-----
        CERTIFICATE
        -----END CERTIFICATE-----
    </code></pre></td>
    <td>Replace <code>RSA_PRIVATE_KEY</code> and <code>CERTIFICATE</code> with the private key and certificate for SSL
    termination of the DNS domains you have pointed at the HA Proxy static IP. Typically this certificate will be for
    wildcard subdomains of your <code>SYSTEM_DOMAIN</code> and <code>APPS_DOMAIN</code>.
  </td>
  </tr>
</table>
