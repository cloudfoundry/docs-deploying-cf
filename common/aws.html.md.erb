---
title: Deploying BOSH on AWS
owner: Release Integration
---

<strong><%= modified_date %></strong>

This topic describes how to use the [bosh-bootloader](https://github.com/cloudfoundry/bosh-bootloader) command-line tool to set up an environment for Cloud Foundry on Amazon Web Services (AWS) and deploy a [BOSH Director](https://bosh.io/docs/bosh-components.html#director).


## <a id='overview'></a> Overview

This topic describes how to create the following:

1. A BOSH Director instance

1. A bastion instance

1. A set of randomly generated BOSH Director credentials

1. A generated key pair that allows you to SSH into the BOSH Director and any instances that BOSH deploys

1. A copy of the manifest used to deploy the BOSH Director
    <p class="note"><strong>Note:</strong> A manifest is a YAML file that defines the components and properties of a BOSH deployment. For more information, see <a href="https://bosh.io/docs/deployment-manifest.html">Deployment Manifest</a> in the BOSH documentation.</p>

1. A basic cloud config
    <p class="note"><strong>Note:</strong> A cloud config is a YAML file that defines IaaS-specific configuration for BOSH. For more information, see <a href="https://bosh.io/docs/cloud-config.html">Usage</a> in the BOSH documentation.</p>

1. A set of Elastic Load Balancers (ELBs)
    <p class="note"><strong>Note:</strong> bosh-bootloader creates the ELBs, but you must still configure DNS to point your domains to the ELBs. For more information, see <a href="dns_prereqs.html">Setting Up DNS for Your Environment</a>.</p>


## <a id='downloads'></a> Step 1: Download Dependencies

To download the required dependencies for bosh-bootloader, do the following:

1. Download [Terraform](https://www.terraform.io/downloads.html) v0.9.1 or later. Unzip the file and move it to somewhere in your PATH:
    <pre class="terminal">
    $ tar xvf ~/Downloads/terraform*
    $ sudo mv ~/Downloads/terraform /usr/local/bin/terraform
    </pre>

1. Download [BOSH CLI v2+](https://bosh.io/docs/cli-v2.html#install). Make the binary executable and move it to somewhere in your PATH:
    <pre class="terminal">
    $ chmod +x ~/Downloads/bosh-cli-*
    $ sudo mv ~/Downloads/bosh-cli-* /usr/local/bin/bosh
    </pre>

1. To download and install bosh-bootloader, do one of the following:
    * On Mac OS X, use Homebrew:
        <pre class="terminal">$ brew install cloudfoundry/tap/bbl</pre>
    * Download the latest bosh-bootloader from [GitHub](https://github.com/cloudfoundry/bosh-bootloader/releases/latest). Make the binary executable and move it to somewhere in your PATH:
        <pre class="terminal">
        $ chmod +x ~/Downloads/bbl-*
        $ sudo mv ~/Downloads/bbl-* /usr/local/bin/bbl
        </pre>

1. Install the [AWS CLI](https://aws.amazon.com/cli/).


## <a id='create-iam'></a> Step 2: Create an IAM User

To create the Identity and Access Management (IAM) user that bosh-bootloader needs to interact with AWS, do the following:

1. Configure the AWS CLI with the information and credentials from your AWS account:
    <pre class="terminal">
    $ aws configure
    AWS Access Key ID [None]: YOUR-AWS-ACCESS-KEY-ID
    AWS Secret Access Key [None]: YOUR-AWS-SECRET-ACCESS-KEY
    Default region name [None]: YOUR-AWS-REGION
    Default output format [None]: json
    </pre>
    For more information about retrieving your credentials, see [Configuring the AWS CLI](http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html) in the AWS documentation.

1. Create the IAM user for bosh-bootloader with the AWS CLI:
    <pre class="terminal">
    $ aws iam create-user --user-name "bbl-user"
    </pre>

1. Copy the following policy text to your clipboard:

    ```
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "ec2:*",
                    "cloudformation:*",
                    "elasticloadbalancing:*",
                    "iam:*",
                    "route53:*",
                    "logs:*",
                    "kms:*"
                ],
                "Resource": [
                    "*"
                ]
            }
        ]
    }
    ```

1. Apply the policy:
    <pre class="terminal">
    $ aws iam put-user-policy --user-name "bbl-user" \
    --policy-name "bbl-policy" \
    --policy-document "$(pbpaste)"
    </pre>

1. Create an access key:
    <pre class="terminal">
    $ aws iam create-access-key --user-name "bbl-user"
    </pre>

    This command outputs an `Access Key ID` and a `Secret Access Key`.
    Record these values and store them in a secure place. You use them in the next section.


## <a id="create-infra-bosh"></a> Step 3: Create Infrastructure, Bastion, BOSH Director, and Load Balancers

Run the following command to create the required infrastructure and deploy a BOSH Director:

<pre class="terminal">
$ bbl plan \
    --name YOUR-ENV-NAME \
    --iaas aws \
    --aws-access-key-id YOUR-ACCESS-KEY-ID \
    --aws-secret-access-key YOUR-SECRET-ACCESS-KEY \
    --aws-region YOUR-AWS-REGION \
    --lb-type cf \
    --lb-cert YOUR-CERT.crt \
    --lb-key YOUR-KEY.key \
    --lb-domain YOUR-ENV-NAME.YOUR-SYSTEM-DOMAIN<br/>
$ bbl up</pre>

Replace the placeholders as follows:

* `YOUR-ACCESS-KEY-ID` and `YOUR-SECRET-ACCESS-KEY`: The credentials for the `bbl-user` you created in the previous section
* `YOUR-AWS-REGION`: Your AWS region, such as `us-west-2`

The `bbl up` command takes five to eight minutes to complete.

After `bbl` deploys the BOSH Director, you must point `YOUR-SYSTEM-DOMAIN` at the BOSH Director's name servers. For example, if you are using AWS Route53 to manage `YOUR-SYSTEM-DOMAIN` then do the following:

1. Run `--lb-domain YOUR-ENV-NAME.YOUR-SYSTEM-DOMAIN`.

1. Run `bbl outputs | yq .env_dns_zone_name_servers` to see the list of name servers for the BOSH Director.

1. Log in to the AWS Route 53 dashboard and go to **Registered Domains**.

1. Choose `YOUR-SYSTEM-DOMAIN`.

1. Click **Add/Edit Name Servers**.

1. Add a `YOUR-ENV-NAME.YOUR-SYSTEM-DOMAIN` NS record, and add the name servers found in the output of the above `bbl outputs` command to that record.

For more information, see [Adding or Changing Name Servers or Glue Records](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-name-servers-glue-records.html#domain-name-servers-glue-records-procedure) in the AWS documentation.

When `bbl plan` or `bbl up` is run, files in the `--state-dir` (or present working directory) will be created, modified, or deleted.

<p class="note"><strong>Note:</strong> The <strong>bbl state directory</strong> contains credentials and other metadata related to your BOSH Director and infrastructure. Back up this directory and store it in a safe location.</p>

To extract information from the bbl state, use `bbl`. For example, to obtain your BOSH Director address, run the following command:

<pre class="terminal">
$ bbl director-address
https://YOUR-DIRECTOR-ADDRESS
</pre>

Run `bbl` to see the full list of values from the state file that you can print. You must always run `bbl` from the state directory.

For more information about the options for securing HTTP traffic into your Cloud Foundry (CF) deployment with SSL/TLS certificates, see [Securing Traffic into Cloud Foundry](../../adminguide/securing-traffic.html).

For test and development environments, you can also generate your own CA certificate and key with a tool such as [certstrap](https://github.com/square/certstrap).


## <a id="connect-bosh-director"></a> Step 4: Connect to the BOSH Director

Run the following command to connect to the BOSH Director:

<pre class="terminal">
$ eval "$(bbl print-env)"
</pre>


## <a id="destroy-environment"></a> Destroy the BOSH Resources

You can use `bbl destroy` to delete the BOSH Director infrastructure in your AWS environment. Use this command if `bbl up` does not complete successfully and you want to reset your environment, or if you want to destroy the resources created by bosh-bootloader for any other reason.

To delete load balancers only, run the following command:

<pre class="terminal">
$ bbl plan
$ bbl up
</pre>


To delete the infrastructure, bastion, director, and load balancers, run the following command:

<pre class="terminal">
$ bbl destroy
</pre>
